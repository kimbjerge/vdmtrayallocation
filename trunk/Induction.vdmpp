class Induction

	instance variables 
		private number : nat;
		private parcel : Item;
		private sorter : Sorter;
		private waitForTrayId : nat;

	types 

	values 
	   HitTrayRate : nat = 3; 		-- R1

	operations 
	
	public Induction: nat * Sorter ==> Induction
	Induction(id, s) ==
	(
		number := id;
		sorter := s;
 	);

	public Running: () ==> ()
	Running () ==
	(
		while true do
		(
			/* duration(10); */ 
			(
			    parcel := new Item(mk_Item`Dimension(10,10,10));
				sorter.TrayAllocate(self);
			)
		)
	);

	public TrayAssign: nat ==> ()
	TrayAssign(trayId) ==
		waitForTrayId := trayId;
	
	public TrayDetect: nat ==> ()
	TrayDetect(trayId) ==
		if waitForTrayId = trayId
		then
			sorter.InductParcel(parcel, trayId);  
			
	functions 

	traces 

end Induction