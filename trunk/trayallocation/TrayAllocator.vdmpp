class TrayAllocator
	types

	values
		public InductionSeperation: nat = 3;
		public NumOfInductions : nat = 5;
		public NumOfTrays : nat = 20

	instance variables
		currThroughput : nat := 0;
		
		-- Induction group and invariants 
		inductionGroup : seq of InductionController := [];
		inv len inductionGroup = NumOfInductions; 
		inv forall x,y in set elems inductionGroup &
			x <> y => x.GetId() <> y.GetId();
			
		-- Sorter ring and invariants	
		sorterRing : inmap Tray`UID to Tray;
		inv card dom sorterRing = NumOfTrays;
		trayAtCardReader : Tray`UID := 0;
		
	operations
	
    -- TrayAllocator constructor
	public TrayAllocator: SorterEnviroment==> TrayAllocator
	TrayAllocator(e) ==
	(
	    sorterRing := {num |-> new Tray() | num in set {1,...,NumOfTrays}};
	    inductionGroup := [new InductionController(self, num) | num in set {1,...,NumOfInductions}];
        e.AssignInductionGroup(inductionGroup);
	);

    -- Simulate sorter-ring moved one tray step
	public TrayStep: Tray`UID * Tray`State  ==> ()
	TrayStep(uid, state) ==
	(
	   	-- Update current tray at card reader
	    trayAtCardReader := uid;
	    sorterRing(trayAtCardReader).SetState(state);
	 	for all i in set {1,...,NumOfInductions} 
		do 
		   inductionGroup(i).TrayStep();
	)
	pre uid in set dom sorterRing;
	
	public InductItem: InductionController * Item ==> bool
	InductItem(ic, item) ==
	(
		return false;	
	)
	pre ic in set elems inductionGroup;
	
	-- Returns true if sorter is full
	public IsSorterFull: () ==> bool
	IsSorterFull() ==
	 return forall id in set dom sorterRing & sorterRing(id).GetState() = <Full>;

	private AllocateTray: () ==> bool
	AllocateTray() ==
		is not yet specified;
		
	functions
	--public CalculateThroughput: set of Tray 
	/*
	to be calculated as:  sum of simulation time steps = number of steps * Tray`TraySize/SorterEnviroment`Speed
    calculate the number of items inducted = number of tray stus equal <full> - sum of two tray items divied by 2
    needs to be converted to items/hour 
	*/

	sync

	--thread

	traces

end TrayAllocator